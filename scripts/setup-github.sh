#!/bin/bash

# Script setup v√† push l√™n GitHub

# M√†u s·∫Øc
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üêô GitHub Setup Script${NC}"
echo ""

# Ki·ªÉm tra git
if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!${NC}"
    exit 1
fi

# Ki·ªÉm tra xem ƒë√£ c√≥ remote ch∆∞a
if git remote | grep -q "origin"; then
    echo -e "${YELLOW}‚ö†Ô∏è  Remote 'origin' ƒë√£ t·ªìn t·∫°i${NC}"
    current_remote=$(git remote get-url origin)
    echo "Remote hi·ªán t·∫°i: $current_remote"
    echo ""
    read -p "B·∫°n c√≥ mu·ªën thay ƒë·ªïi? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Gi·ªØ nguy√™n remote hi·ªán t·∫°i"
        exit 0
    fi
    git remote remove origin
fi

echo ""
echo "C√≥ 2 c√°ch ƒë·ªÉ push l√™n GitHub:"
echo ""
echo "1. S·ª≠ d·ª•ng GitHub CLI (T·ª± ƒë·ªông) - Khuy√™n d√πng"
echo "2. Th·ªß c√¥ng (T·∫°o repo tr√™n web)"
echo ""
read -p "Ch·ªçn ph∆∞∆°ng √°n (1/2): " -n 1 -r choice
echo ""

if [ "$choice" == "1" ]; then
    # S·ª≠ d·ª•ng GitHub CLI
    if ! command -v gh &> /dev/null; then
        echo -e "${YELLOW}üì¶ GitHub CLI ch∆∞a c√†i ƒë·∫∑t. ƒêang c√†i...${NC}"
        brew install gh
    fi
    
    echo -e "${BLUE}üîê ƒêang ƒëƒÉng nh·∫≠p GitHub...${NC}"
    gh auth status &>/dev/null || gh auth login
    
    echo ""
    read -p "Repository name [todo-app-react-native]: " repo_name
    repo_name=${repo_name:-todo-app-react-native}
    
    echo ""
    read -p "Public hay Private? (pub/priv) [pub]: " visibility
    visibility=${visibility:-pub}
    
    if [ "$visibility" == "pub" ]; then
        visibility_flag="--public"
    else
        visibility_flag="--private"
    fi
    
    echo ""
    echo -e "${YELLOW}üöÄ ƒêang t·∫°o repository v√† push...${NC}"
    
    gh repo create "$repo_name" \
        --source=. \
        $visibility_flag \
        --description "Professional TODO List app built with React Native & TypeScript" \
        --push
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Push th√†nh c√¥ng!${NC}"
        repo_url=$(gh repo view --json url -q .url)
        echo -e "${GREEN}Repository: $repo_url${NC}"
    else
        echo -e "${RED}‚ùå C√≥ l·ªói x·∫£y ra!${NC}"
        exit 1
    fi
    
else
    # Th·ªß c√¥ng
    echo ""
    echo -e "${YELLOW}üìù H∆∞·ªõng d·∫´n th·ªß c√¥ng:${NC}"
    echo ""
    echo "1. Truy c·∫≠p: https://github.com/new"
    echo "2. Repository name: todo-app-react-native"
    echo "3. Description: Professional TODO List app - React Native & TypeScript"
    echo "4. Ch·ªçn Public/Private"
    echo "5. KH√îNG tick 'Initialize with README'"
    echo "6. Click 'Create repository'"
    echo ""
    read -p "ƒê√£ t·∫°o xong? Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
    echo ""
    
    read -p "Nh·∫≠p GitHub username c·ªßa b·∫°n: " github_username
    
    if [ -z "$github_username" ]; then
        echo -e "${RED}‚ùå Username kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!${NC}"
        exit 1
    fi
    
    read -p "Repository name [todo-app-react-native]: " repo_name
    repo_name=${repo_name:-todo-app-react-native}
    
    repo_url="https://github.com/$github_username/$repo_name.git"
    
    echo ""
    echo -e "${YELLOW}üîó ƒêang th√™m remote...${NC}"
    git remote add origin "$repo_url"
    
    echo -e "${YELLOW}üì§ ƒêang push l√™n GitHub...${NC}"
    git branch -M main
    git push -u origin main
    
    if [ $? -eq 0 ]; then
        echo ""
        echo -e "${GREEN}‚úÖ Push th√†nh c√¥ng!${NC}"
        echo -e "${GREEN}Repository: https://github.com/$github_username/$repo_name${NC}"
    else
        echo ""
        echo -e "${RED}‚ùå Push th·∫•t b·∫°i!${NC}"
        echo ""
        echo "C√≥ th·ªÉ b·∫°n c·∫ßn Personal Access Token:"
        echo "1. V√†o: https://github.com/settings/tokens"
        echo "2. Click 'Generate new token (classic)'"
        echo "3. Ch·ªçn scope: 'repo'"
        echo "4. Copy token"
        echo "5. D√πng token l√†m password khi push"
        echo ""
        read -p "B·∫°n c√≥ mu·ªën th·ª≠ l·∫°i v·ªõi token? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git push -u origin main
        fi
    fi
fi

echo ""
echo -e "${BLUE}üìä Git status:${NC}"
git status
echo ""
echo -e "${GREEN}üéâ Ho√†n t·∫•t!${NC}"

