#!/bin/bash

# Script t·ª± ƒë·ªông c√†i ƒë·∫∑t Android environment cho macOS

echo "üöÄ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t Android Development Environment..."

# M√†u s·∫Øc cho terminal
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Ki·ªÉm tra Homebrew
if ! command -v brew &> /dev/null; then
    echo -e "${RED}‚ùå Homebrew ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!${NC}"
    echo "Vui l√≤ng c√†i Homebrew tr∆∞·ªõc: https://brew.sh"
    exit 1
fi

echo -e "${GREEN}‚úÖ Homebrew ƒë√£ c√†i ƒë·∫∑t${NC}"

# Ki·ªÉm tra Java
if ! command -v java &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Java ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang c√†i ƒë·∫∑t...${NC}"
    brew install --cask zulu11
else
    java_version=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | cut -d'.' -f1)
    if [ "$java_version" -ge 11 ]; then
        echo -e "${GREEN}‚úÖ Java $java_version ƒë√£ c√†i ƒë·∫∑t${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Java version < 11. ƒêang c√†i ƒë·∫∑t Java 11...${NC}"
        brew install --cask zulu11
    fi
fi

# C·∫•u h√¨nh ANDROID_HOME
ANDROID_HOME_PATH="$HOME/Library/Android/sdk"

if [ ! -d "$ANDROID_HOME_PATH" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Android SDK ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t${NC}"
    echo "Vui l√≤ng:"
    echo "1. C√†i ƒë·∫∑t Android Studio t·ª´: https://developer.android.com/studio"
    echo "2. M·ªü Android Studio v√† c√†i SDK Platform 33"
    echo "3. Ch·∫°y l·∫°i script n√†y"
    exit 1
fi

echo -e "${GREEN}‚úÖ Android SDK ƒë√£ c√†i ƒë·∫∑t t·∫°i: $ANDROID_HOME_PATH${NC}"

# C·∫•u h√¨nh environment variables
SHELL_CONFIG=""
if [ -f "$HOME/.zshrc" ]; then
    SHELL_CONFIG="$HOME/.zshrc"
elif [ -f "$HOME/.bash_profile" ]; then
    SHELL_CONFIG="$HOME/.bash_profile"
else
    SHELL_CONFIG="$HOME/.zshrc"
    touch "$SHELL_CONFIG"
fi

echo -e "${YELLOW}üìù ƒêang c·∫•u h√¨nh environment variables...${NC}"

# Ki·ªÉm tra xem ƒë√£ c√≥ c·∫•u h√¨nh ch∆∞a
if ! grep -q "ANDROID_HOME" "$SHELL_CONFIG"; then
    cat >> "$SHELL_CONFIG" << 'EOF'

# Android SDK
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
EOF
    echo -e "${GREEN}‚úÖ ƒê√£ th√™m ANDROID_HOME v√†o $SHELL_CONFIG${NC}"
else
    echo -e "${GREEN}‚úÖ ANDROID_HOME ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh${NC}"
fi

# Source l·∫°i config
source "$SHELL_CONFIG"

# Ki·ªÉm tra adb
if command -v adb &> /dev/null; then
    adb_version=$(adb --version | head -n 1)
    echo -e "${GREEN}‚úÖ ADB ƒë√£ s·∫µn s√†ng: $adb_version${NC}"
else
    echo -e "${RED}‚ùå ADB ch∆∞a s·∫µn s√†ng${NC}"
    echo "Vui l√≤ng:"
    echo "1. M·ªü Android Studio"
    echo "2. V√†o SDK Manager v√† c√†i Android SDK Platform-Tools"
    echo "3. Restart terminal v√† ch·∫°y l·∫°i script"
    exit 1
fi

echo ""
echo -e "${GREEN}üéâ C√†i ƒë·∫∑t ho√†n t·∫•t!${NC}"
echo ""
echo "C√°c b∆∞·ªõc ti·∫øp theo:"
echo "1. Restart terminal: source $SHELL_CONFIG"
echo "2. K·∫øt n·ªëi thi·∫øt b·ªã Android v√† b·∫≠t USB Debugging"
echo "3. Ki·ªÉm tra: adb devices"
echo "4. Ch·∫°y app: npm run android"

